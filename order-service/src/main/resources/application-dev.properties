
#========== datasource ===========

spring.datasource.url=jdbc:mysql://localhost:3306/order_trading
spring.datasource.username=root
spring.datasource.password=root123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#========== discovery =====
eureka.client.serviceUrl.defaultZone=http://anhht:storm@localhost:8761/eureka
spring.application.name=order-service

my_name=java_dev
spring.jpa.properties.hibernate.id.new_generator_mappings=false
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
#========== kafka ===========

spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=<consumer_group_id>
spring.kafka.consumer.auto-offset-reset=earliest

#0 no waite kf response, 1: leader write success not wait follower
# -1 waite for all leader and replication
spring.kafka.producer.acks=-1
spring.kafka.producer.retries=1

#prevent duplicate send
spring.kafka.producer.properties.[enable.idempotence]=true
spring.kafka.producer.properties.[max.in.flight.requests.per.connection]=5

#consumer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
#producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


